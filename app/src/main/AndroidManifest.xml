<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="cn.dreamchase.android.second">

    <uses-permission android:name="android.permission.READ_CONTACTS"/>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.Androidsecond"
        android:name=".activity.MyApplication">

        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- 显示启动 -->
        <!-- 注册一个Activity -->
        <activity android:name=".activity.SecondActivity"/>

        <!-- 隐式启动 -->
        <!-- 注册一个Activity -->
        <activity android:name=".activity.ThreeActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="cn.dreamchase.android.second.activity.ThreeActivity"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>

        <!-- 显示启动 -->
        <!-- 注册一个Activity -->
        <activity android:name=".activity.FourActivity"/>
        <activity android:name=".activity.ExplodeActivity"/>
        <activity android:name=".activity.SlideActivity"/>
        <activity android:name=".activity.FadeActivity"/>
        <activity android:name=".activity.SharedElementActivity"/>
        <activity android:name=".activity.AcceptActivity"/>
        <activity android:name=".activity.AcceptChuanZhiHuiChuanZhiActivity"
            android:windowSoftInputMode="adjustNothing"
            android:launchMode="standard"/>

        <!--
            task是一个具有栈结构的对象，一个task可以管理多个Activity，启动一个应用，也就创建一个与之对应的task

            解决任务栈的缺点，引入了启动模式 android:launchMode=""
                四种启动模式
                    standard  系统默认的启动模式，即标准模式
                    singleTop 栈顶复用模式
                    singleTask 栈内复用模式
                        两点注意：
                            如果是其他App以singleTask模式启动Activity1 ，将会创建一个新的任务栈
                            如果以singleTask模式启动的Activity1 已经在后台的一个任务栈中，那么启动后，后台的任务栈一起切换到前台
                    singleInstance 全局唯一模式（这个模式下的Activity会单独占用一个栈，这个栈在整个系统中是唯一的，
                            不同的app去打开singleInstance模式的Activity，如果这个实例存在，不会重新创建，系统中永远只会有一个这样的实例）

        -->

        <!--
            android:windowSoftInputMode 避免输入法面板遮挡输入框的问题,在 AndroidManifest.xml 中设置
            属性值:
                stateUnspecified   软键盘的状态并没有指定，系统将选中一个合适的状态或依赖主题设置
                stateUnchanged  当这个Activity出现时，软键盘将一直保持在上一个Activity中的状态，无论是显示还是隐藏
                stateHidden    用户选择Activity时，软键盘总是被隐藏
                stateAlwaysHidden  当该Activity主窗口获取焦点时，软键盘也总是被隐藏
                stateVisible   软键盘通常是可见的
                stateAlwaysVisible 用户选择 Activity 时，软键盘总是显示的状态
                adjustUnspecified  默认设置，通常由系统自行决定是隐藏还是显示，软键盘不会自动弹出
                adjustResize  该Activity总是调整屏幕的大小，以便流出软键盘的空间  会自动弹出软键盘
                adjustPan  当前窗口的内容将自动移动，以便当前焦点从不被键盘覆盖和用户总是能够看到输入内容部分，软键盘不会自动弹出
                adjustNothing 不会调整屏幕的大小 ，软键盘不会自动弹出

        -->

        <!-- 注册一个Service -->
        <service android:name=".service.LocalService"/>

        <!-- 注册一个receiver -->
        <receiver android:name=".broadcast.StaticBroadcast" android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.STATIC_BROADCAST"/>
            </intent-filter>
        </receiver>


    </application>

</manifest>